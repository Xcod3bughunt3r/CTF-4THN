['from flask import Flask, flash\n', 'from flask import session, request, render_template, make_response, redirect, url_for\n', 'from flask.ext.sqlalchemy import SQLAlchemy\n', 'from sqlalchemy.exc import IntegrityError\n', 'import os, hmac, base64, pickle, hashlib\n', '\n', 'application = Flask(__name__)\n', '\n', '# static key for CGI\n', 'application.secret_key = \'2c]E{&\\xc0V\\xd8\\x8d(w\\xb5<\\x86 !\\xda\\x0css\\xb7\\xebAaK\\x0e\\xee]\\xce\\xa1VM\\x9e"\\x19<\\xb9\\xc6\\xd4\\x10\\xadn\\xd8\\xcb\\xee\\tR\\x0e\\xc2\\xcd\\xd5\\xd9\\\'\\xa4\\xd9\\xe19\\tl\\x99&\\x9d8\\xa8R\\xee\\xccZ!\\xb8\\xa4\\x94\\x80/\\x15\\xa0\\x90V\\xc9\\xe2OY\\xdb\\xbak\\xe0,\\x92\\x0e2;\\xca\\\'Kh\\x0b\\x0b\\xd0\\xc5\\xe6l2\\xccX\\xe9;\\xa5\\xe1gK}q?A\\xeb\\xb7k1"\\xc1\\x03\\x18\\xcb\\xed\\xe4\\xa6+\\xa1\\x18\\x02\\xa6K\\xa2\\x00s\\x90JE\\xd9\\x05\\\'\\xe0\\x89`?\\xee\\xea\\xb1\\xbc^\\xe2V\\xe6\\xb9\\x86\\xea6\\xe2z\\xe1Lv\\xe7[\\x11-\\\'\\xdet}\\xbc\\x95M9\\x88\\xd8#A\\rb8\\x0e)NG\\xb0:e\\xa5\\t\\xad\\xc3\\xd6\\x85\\x1a\\xa7\\x98\\x16\\x81d\\x20a\\x92\\xb9\\x05y=\\x82z\\xd3S\\xde\\xec\\x16\\x08\\xd9(\\xbe\\x0eDqo/\\xda7\\xa6A\\x9e\\xc2\\xa0\\x08\\xba\\xbc$,\\xdd\\x83N(\\\'\\x1c\\xe3\\xc2lp\\x98S*\\xbb\\x01\\xe1\\x1d\\x88\\x13\\xeboQ\\x10\\x04\\xdaSS\\xba\\x19RW\\x98\\xed\\xcb\\xae\\x91\\xb0SBw\\xb7\\xee\\x15\\xae\\x01^\\x8e\\x1aJ\\xc8\\x03\\x82\\x08w\\xce\\xa6y\\xb3e\\x8d\\xae@g\\x7eEY\\xe3x\\xe4\\xeewd&\\xed\\xc9\\xde~\\r\\xb5\\x0b\\x10\\x12\\xa7\\xa3r\\xbe\\xe8\\xbbE\\xa0\\xd4|\\xb1\\x95\\x00\\xa6\\xe3I\\xe6.\\xb5\\xe0rSh\\xc1\\x18\\xe1B\\x05x\\xb0\\x92\\xea\\xd2\\xa5\\xc6\\x97\\x9cb\\x84\\x18\\xb5P\\xa2\\xc6\\xec\\xee\\xee\\x11\\xe1X\\x1d\\xe218 \\xc6\\xce\\xcc\\xed\\x8c\\xc9\\xde\\x00\\x17\\xe0`X![\\xe88\\xe2>LV\\xe0\\x0c\\xd8\\xbb\\x05T\\x8a\'\n', '\n', '\n', "application.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/pentesterlab.db'\n", '\n', '\n', 'db = SQLAlchemy(application)\n', '\n', '\n', 'class Box:\n', ' def __init__(self,name):\n', ' self.name = name \n', ' def __str__(self):\n', ' return "Object: Box[name=\\""+self.name+"\\"]"\n', '\n', '\n', 'class Table:\n', ' def __init__(self,name):\n', ' self.name = name\n', ' def __str__(self):\n', ' return "Object: Table[name=\\""+self.name+"\\"]"\n', '\n', 'class Category(db.Model):\n', ' id = db.Column(db.Integer, primary_key=True)\n', ' name = db.Column(db.String(255))\n', ' \n', ' def __init__(self, name):\n', ' self.name = name\n', '\n', 'class DbObject(db.Model):\n', ' id = db.Column(db.Integer, primary_key=True)\n', ' name = db.Column(db.String(255))\n', ' value = db.Column(db.String(255)) \n', ' cat_id = db.Column(db.Integer)\n', '\n', ' def __init__(self, name,value, cat):\n', ' self.name = name\n', ' self.value = value \n', ' self.cat_id = cat\n', '\n', 'db.drop_all()\n', 'db.create_all()\n', "a=Category('Usual objects')\n", "b=Category('Unsual objects')\n", "c=Category('Cool objects')\n", 'db.session.add(a)\n', 'db.session.add(b)\n', 'db.session.add(c)\n', 'db.session.commit()\n', '\n', 'x = DbObject("Object 1", None, a.id)\n', 'y = DbObject("Object 2", pickle.dumps(Box("Magic Box")).decode(encoding=\'ISO-8859-1\') , b.id)\n', 'w = DbObject("Object 4", pickle.dumps(Table("Coffee Table")).decode(encoding=\'ISO-8859-1\') , b.id)\n', 'z = DbObject("Object 3", None, c.id)\n', 'db.session.add(x)\n', 'db.session.add(y)\n', 'db.session.add(w)\n', 'db.session.add(z)\n', 'db.session.commit()\n', '\n', '@application.route("/", methods=[\'GET\'])\n', 'def index():\n', ' sql = "SELECT * FROM db_object"\n', " if request.args != [] and request.args.get('cat') != None:\n", ' sql = "SELECT * FROM db_object where cat_id="+request.args.get(\'cat\')\n', ' result = db.engine.execute(sql)\n', ' objects = []\n', ' for row in result:\n', ' val = row[2] \n', ' if row[2]!= None:\n', ' try:\n', ' print(row[2])\n', " val = pickle.loads(row[2].encode(encoding='ISO-8859-1')) \n", ' except Exception as e:\n', ' val = e\n', ' objects.append([row[0],row[1],val,row[3]])\n', " return render_template('index.html', objects=objects)\n", '\n', '\n', '\n', 'if __name__ == "__main__":\n', ' application.run(debug=True)\n', '\n'] 	4
